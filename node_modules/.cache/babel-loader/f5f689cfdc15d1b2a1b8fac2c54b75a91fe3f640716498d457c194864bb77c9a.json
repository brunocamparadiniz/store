{"ast":null,"code":"var _jsxFileName = \"/Users/brunocamparadiniz/Desktop/coding/ZTM-REACT/projects/store/src/components/button/button.jsx\";\nimport { BaseButton, GoogleSigninButton, InvertedButton } from \"./button.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BUTTON_TYPE_CLASSES = {\n  base: 'base',\n  google: 'google-sign-in',\n  inverted: 'inverted'\n};\nconst getButton = function () {\n  let buttonType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : BUTTON_TYPE_CLASSES.base;\n  return {\n    [BUTTON_TYPE_CLASSES.base]: BaseButton,\n    [BUTTON_TYPE_CLASSES.google]: GoogleSigninButton,\n    [BUTTON_TYPE_CLASSES.inverted]: InvertedButton\n  }[buttonType];\n};\nconst Button = _ref => {\n  let {\n    children,\n    buttonType,\n    ...otherProps\n  } = _ref;\n  const CustomButton = getButton(buttonType);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `button-container ${BUTTON_TYPE_CLASSES[buttonType]}`,\n    ...otherProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["BaseButton","GoogleSigninButton","InvertedButton","jsxDEV","_jsxDEV","BUTTON_TYPE_CLASSES","base","google","inverted","getButton","buttonType","arguments","length","undefined","Button","_ref","children","otherProps","CustomButton","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/brunocamparadiniz/Desktop/coding/ZTM-REACT/projects/store/src/components/button/button.jsx"],"sourcesContent":["import { BaseButton, GoogleSigninButton, InvertedButton } from \"./button.styles\"\n\n\nconst BUTTON_TYPE_CLASSES = {\n  base: 'base',\n  google: 'google-sign-in',\n  inverted: 'inverted'\n}\n\nconst getButton = (buttonType = BUTTON_TYPE_CLASSES.base) => (\n  {\n    [BUTTON_TYPE_CLASSES.base]: BaseButton,\n    [BUTTON_TYPE_CLASSES.google]: GoogleSigninButton,\n    [BUTTON_TYPE_CLASSES.inverted]: InvertedButton,\n  }[buttonType]\n) \n\nconst Button = ({ children, buttonType, ...otherProps }) => {\n  const CustomButton = getButton(buttonType)\n  return (\n    <button className={`button-container ${BUTTON_TYPE_CLASSES[buttonType]}`}\n    {...otherProps}>\n      {children}\n    </button>\n  )\n}\n\nexport default Button"],"mappings":";AAAA,SAASA,UAAU,EAAEC,kBAAkB,EAAEC,cAAc,QAAQ,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGhF,MAAMC,mBAAmB,GAAG;EAC1BC,IAAI,EAAE,MAAM;EACZC,MAAM,EAAE,gBAAgB;EACxBC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,SAAS,GAAG,SAAAA,CAAA;EAAA,IAACC,UAAU,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,mBAAmB,CAACC,IAAI;EAAA,OACtD;IACE,CAACD,mBAAmB,CAACC,IAAI,GAAGN,UAAU;IACtC,CAACK,mBAAmB,CAACE,MAAM,GAAGN,kBAAkB;IAChD,CAACI,mBAAmB,CAACG,QAAQ,GAAGN;EAClC,CAAC,CAACQ,UAAU,CAAC;AAAA,CACd;AAED,MAAMI,MAAM,GAAGC,IAAA,IAA6C;EAAA,IAA5C;IAAEC,QAAQ;IAAEN,UAAU;IAAE,GAAGO;EAAW,CAAC,GAAAF,IAAA;EACrD,MAAMG,YAAY,GAAGT,SAAS,CAACC,UAAU,CAAC;EAC1C,oBACEN,OAAA;IAAQe,SAAS,EAAG,oBAAmBd,mBAAmB,CAACK,UAAU,CAAE,EAAE;IAAA,GACrEO,UAAU;IAAAD,QAAA,EACXA;EAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEb,CAAC;AAAAC,EAAA,GARKV,MAAM;AAUZ,eAAeA,MAAM;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}