{"ast":null,"code":"var _jsxFileName = \"/Users/brunocamparadiniz/Desktop/coding/ZTM-REACT/projects/store/src/contexts/cart.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst addCartItem = (cartItems, productToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => {\n    return cartItem.id === productToAdd.id;\n  });\n  if (existingCartItem) {\n    return cartItems.map(cartItem => {\n      return cartItem.id === productToAdd.id ? {\n        ...cartItem,\n        quantity: cartItem.quantity + 1\n      } : cartItem;\n    });\n  }\n  return [...cartItems, {\n    ...productToAdd,\n    quantity: 1\n  }];\n};\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  cartCount: 0,\n  removeItemFromCart: () => {}\n});\nexport const CartProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const [cartCount, setCartCount] = useState(0);\n  useEffect(() => {\n    const newCartCount = cartItems.reduce((total, cartItem) => total + cartItem.quantity, 0);\n    setCartCount(newCartCount);\n  }, [cartItems]);\n  const addItemToCart = productToAdd => {\n    setCartItems(addCartItem(cartItems, productToAdd));\n  };\n  const removeItemFromCart = cartItemToRemove => {\n    setCartItems(addCartItem(cartItems, cartItemToRemove));\n  };\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    cartItems,\n    cartCount\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this);\n};\n_s(CartProvider, \"1STVRVZJMMTq6OZavO9o7qwZdno=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jsxDEV","_jsxDEV","addCartItem","cartItems","productToAdd","existingCartItem","find","cartItem","id","map","quantity","CartContext","isCartOpen","setIsCartOpen","addItemToCart","cartCount","removeItemFromCart","CartProvider","_ref","_s","children","setCartItems","setCartCount","newCartCount","reduce","total","cartItemToRemove","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/brunocamparadiniz/Desktop/coding/ZTM-REACT/projects/store/src/contexts/cart.jsx"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n  const existingCartItem = cartItems.find((cartItem) => {\n    return cartItem.id === productToAdd.id;\n  });\n  if (existingCartItem) {\n    return cartItems.map((cartItem) => {\n      return cartItem.id === productToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem;\n    });\n  }\n  return [...cartItems, { ...productToAdd, quantity: 1 }];\n};\n\nexport const CartContext = createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  cartCount: 0,\n  removeItemFromCart: () => {},\n});\n\nexport const CartProvider = ({ children }) => {\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const [cartCount, setCartCount] = useState(0);\n\n  useEffect(() => {\n    const newCartCount = cartItems.reduce((total, cartItem) => total + cartItem.quantity, 0)\n    setCartCount(newCartCount)\n  }, [cartItems])\n\n  const addItemToCart = (productToAdd) => {\n    setCartItems(addCartItem(cartItems, productToAdd));\n  };\n  const removeItemFromCart = (cartItemToRemove) => {\n    setCartItems(addCartItem(cartItems, cartItemToRemove));\n  };\n  const value = { isCartOpen, setIsCartOpen, addItemToCart, cartItems, cartCount };\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n};\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,WAAW,GAAGA,CAACC,SAAS,EAAEC,YAAY,KAAK;EAC/C,MAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAI,CAAEC,QAAQ,IAAK;IACpD,OAAOA,QAAQ,CAACC,EAAE,KAAKJ,YAAY,CAACI,EAAE;EACxC,CAAC,CAAC;EACF,IAAIH,gBAAgB,EAAE;IACpB,OAAOF,SAAS,CAACM,GAAG,CAAEF,QAAQ,IAAK;MACjC,OAAOA,QAAQ,CAACC,EAAE,KAAKJ,YAAY,CAACI,EAAE,GAClC;QAAE,GAAGD,QAAQ;QAAEG,QAAQ,EAAEH,QAAQ,CAACG,QAAQ,GAAG;MAAE,CAAC,GAChDH,QAAQ;IACd,CAAC,CAAC;EACJ;EACA,OAAO,CAAC,GAAGJ,SAAS,EAAE;IAAE,GAAGC,YAAY;IAAEM,QAAQ,EAAE;EAAE,CAAC,CAAC;AACzD,CAAC;AAED,OAAO,MAAMC,WAAW,gBAAGd,aAAa,CAAC;EACvCe,UAAU,EAAE,KAAK;EACjBC,aAAa,EAAEA,CAAA,KAAM,CAAC,CAAC;EACvBV,SAAS,EAAE,EAAE;EACbW,aAAa,EAAEA,CAAA,KAAM,CAAC,CAAC;EACvBC,SAAS,EAAE,CAAC;EACZC,kBAAkB,EAAEA,CAAA,KAAM,CAAC;AAC7B,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACvC,MAAM,CAACN,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACK,SAAS,EAAEkB,YAAY,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACiB,SAAS,EAAEO,YAAY,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACd,MAAMwB,YAAY,GAAGpB,SAAS,CAACqB,MAAM,CAAC,CAACC,KAAK,EAAElB,QAAQ,KAAKkB,KAAK,GAAGlB,QAAQ,CAACG,QAAQ,EAAE,CAAC,CAAC;IACxFY,YAAY,CAACC,YAAY,CAAC;EAC5B,CAAC,EAAE,CAACpB,SAAS,CAAC,CAAC;EAEf,MAAMW,aAAa,GAAIV,YAAY,IAAK;IACtCiB,YAAY,CAACnB,WAAW,CAACC,SAAS,EAAEC,YAAY,CAAC,CAAC;EACpD,CAAC;EACD,MAAMY,kBAAkB,GAAIU,gBAAgB,IAAK;IAC/CL,YAAY,CAACnB,WAAW,CAACC,SAAS,EAAEuB,gBAAgB,CAAC,CAAC;EACxD,CAAC;EACD,MAAMC,KAAK,GAAG;IAAEf,UAAU;IAAEC,aAAa;IAAEC,aAAa;IAAEX,SAAS;IAAEY;EAAU,CAAC;EAChF,oBAAOd,OAAA,CAACU,WAAW,CAACiB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAP,QAAA,EAAEA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAwB;AAC9E,CAAC;AAACb,EAAA,CAlBWF,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}