{"ast":null,"code":"var _jsxFileName = \"/Users/brunocamparadiniz/Desktop/coding/ZTM-REACT/projects/store/src/components/button/button.jsx\";\nimport { BaseButton, GoogleSigninButton, InvertedButton } from \"./button.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BUTTON_TYPE_CLASSES = {\n  base: \"base\",\n  google: \"google-sign-in\",\n  inverted: \"inverted\"\n};\nconst getButton = function () {\n  let buttonType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : BUTTON_TYPE_CLASSES.base;\n  return {\n    [BUTTON_TYPE_CLASSES.base]: BaseButton,\n    [BUTTON_TYPE_CLASSES.google]: GoogleSigninButton,\n    [BUTTON_TYPE_CLASSES.inverted]: InvertedButton\n  }[buttonType];\n};\nconst Button = _ref => {\n  let {\n    children,\n    buttonType,\n    ...otherProps\n  } = _ref;\n  const CustomButton = getButton(buttonType);\n  return /*#__PURE__*/_jsxDEV(CustomButton, {\n    ...otherProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n};\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["BaseButton","GoogleSigninButton","InvertedButton","jsxDEV","_jsxDEV","BUTTON_TYPE_CLASSES","base","google","inverted","getButton","buttonType","arguments","length","undefined","Button","_ref","children","otherProps","CustomButton","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/brunocamparadiniz/Desktop/coding/ZTM-REACT/projects/store/src/components/button/button.jsx"],"sourcesContent":["import {\n  BaseButton,\n  GoogleSigninButton,\n  InvertedButton,\n} from \"./button.styles\";\n\nconst BUTTON_TYPE_CLASSES = {\n  base: \"base\",\n  google: \"google-sign-in\",\n  inverted: \"inverted\",\n};\n\nconst getButton = (buttonType = BUTTON_TYPE_CLASSES.base) =>\n  ({\n    [BUTTON_TYPE_CLASSES.base]: BaseButton,\n    [BUTTON_TYPE_CLASSES.google]: GoogleSigninButton,\n    [BUTTON_TYPE_CLASSES.inverted]: InvertedButton,\n  }[buttonType]);\n\nconst Button = ({ children, buttonType, ...otherProps }) => {\n  const CustomButton = getButton(buttonType);\n  return <CustomButton {...otherProps}>{children}</CustomButton>;\n};\n\nexport default Button;\n"],"mappings":";AAAA,SACEA,UAAU,EACVC,kBAAkB,EAClBC,cAAc,QACT,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,mBAAmB,GAAG;EAC1BC,IAAI,EAAE,MAAM;EACZC,MAAM,EAAE,gBAAgB;EACxBC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,SAAS,GAAG,SAAAA,CAAA;EAAA,IAACC,UAAU,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,mBAAmB,CAACC,IAAI;EAAA,OACrD;IACC,CAACD,mBAAmB,CAACC,IAAI,GAAGN,UAAU;IACtC,CAACK,mBAAmB,CAACE,MAAM,GAAGN,kBAAkB;IAChD,CAACI,mBAAmB,CAACG,QAAQ,GAAGN;EAClC,CAAC,CAACQ,UAAU,CAAC;AAAA,CAAC;AAEhB,MAAMI,MAAM,GAAGC,IAAA,IAA6C;EAAA,IAA5C;IAAEC,QAAQ;IAAEN,UAAU;IAAE,GAAGO;EAAW,CAAC,GAAAF,IAAA;EACrD,MAAMG,YAAY,GAAGT,SAAS,CAACC,UAAU,CAAC;EAC1C,oBAAON,OAAA,CAACc,YAAY;IAAA,GAAKD,UAAU;IAAAD,QAAA,EAAGA;EAAQ;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAgB;AAChE,CAAC;AAACC,EAAA,GAHIT,MAAM;AAKZ,eAAeA,MAAM;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}